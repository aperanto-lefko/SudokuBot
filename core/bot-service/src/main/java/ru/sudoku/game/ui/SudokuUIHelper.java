package ru.sudoku.game.ui;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import ru.sudoku.game.dto.SudokuCellDto;
import ru.sudoku.game.model.SudokuCell;

import java.util.ArrayList;
import java.util.List;

@Component
public class SudokuUIHelper {
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–≤—ã–º –ø–æ–ª–µ–º Sudoku –¥–ª—è Telegram –±–æ—Ç–∞
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param board –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ —è—á–µ–µ–∫ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è Sudoku
     * @return –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ SendMessage —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
     *
     * @apiNote –ú–µ—Ç–æ–¥ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –≥–¥–µ:
     *          - –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —á–∏—Å–ª–∞ –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
     *          - –ò–∑–º–µ–Ω—è–µ–º—ã–µ —è—á–µ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Å —Ç–æ—á–∫–æ–π –ø–æ—Å–ª–µ —á–∏—Å–ª–∞ –∏–ª–∏ "‚ùì" –¥–ª—è –ø—É—Å—Ç—ã—Ö —è—á–µ–µ–∫
     *          - –ö–∞–∂–¥–∞—è –∏–∑–º–µ–Ω—è–µ–º–∞—è —è—á–µ–π–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–æ–π —Å callback –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "CELL_X_Y"
     */
    public SendMessage buildBoardMessage(long chatId, SudokuCellDto[][] board) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        int size = board.length;
        for (int r = 0; r < size; r++) {
            List<InlineKeyboardButton> row = new ArrayList<>();
            for (int c = 0; c < size; c++) {
                SudokuCellDto cell = board[r][c];
                InlineKeyboardButton btn = new InlineKeyboardButton();

                if (cell.isFixed()) {
                    // —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞: –∑–∞–º–æ–∫, –Ω–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ
                    btn.setText(cell.getValue() + "");
                    btn.setCallbackData("LOCKED");
                } else {
                    // –ø—É—Å—Ç–∞—è –∫–ª–µ—Ç–∫–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ: –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ
                    btn.setText(cell.getValue() == 0 ? "‚ùì" : String.valueOf(cell.getValue() + "."));
                    btn.setCallbackData("CELL_" + r + "_" + c);
                }

                row.add(btn);

            }
            rows.add(row);
        }
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);

        SendMessage msg = new SendMessage();
        msg.setChatId(String.valueOf(chatId));
        msg.setText("–í–∞—à–µ Sudoku:");
        msg.setReplyMarkup(markup);
        return msg;
    }
    /**
     * –°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∏—Å–ª–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–ª–µ—Ç–∫–µ Sudoku
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param row –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–ª–µ—Ç–∫–∏ (0-based)
     * @param col –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–ª–µ—Ç–∫–∏ (0-based)
     * @return –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ SendMessage —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤—ã–±–æ—Ä–∞ —á–∏—Å–µ–ª
     *
     * @apiNote –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —á–∏—Å–ª–∞–º–∏ –æ—Ç 1 –¥–æ 4 –∏ —É–ø—Ä–∞–≤–ª—è—é—â–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏:
     *          - –ß–∏—Å–ª–∞ 1-4: –∫–Ω–æ–ø–∫–∏ —Å callback –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "VALUE_row_col_number"
     *          - –ö–Ω–æ–ø–∫–∞ "üßπ —Å—Ç–µ—Ä–µ—Ç—å": —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ 0 –¥–ª—è –∫–ª–µ—Ç–∫–∏
     *          - –ö–Ω–æ–ø–∫–∞ "‚Ü©Ô∏è –æ—Ç–º–µ–Ω–∞": –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –¥–µ–π—Å—Ç–≤–∏—é
     *          –í —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ user-friendly —Ñ–æ—Ä–º–∞—Ç–µ (1-based)
     */

    public SendMessage buildNumberSelection(long chatId, int row, int col) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å–æ –≤—Å–µ–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏: —Ü–∏—Ñ—Ä—ã 1-4, —Å—Ç–µ—Ä–µ—Ç—å, –æ—Ç–º–µ–Ω–∞
        List<InlineKeyboardButton> singleRow = new ArrayList<>();

        // —Ü–∏—Ñ—Ä—ã 1-4
        for (int num = 1; num <= 4; num++) {
            InlineKeyboardButton btn = new InlineKeyboardButton();
            btn.setText(String.valueOf(num));
            btn.setCallbackData("VALUE_" + row + "_" + col + "_" + num);
            singleRow.add(btn);
        }
        // —Å—Ç–µ—Ä–µ—Ç—å
        InlineKeyboardButton erase = new InlineKeyboardButton();
        erase.setText("üßπ");
        erase.setCallbackData("VALUE_" + row + "_" + col + "_0");
        singleRow.add(erase);

        // –æ—Ç–º–µ–Ω–∞
        InlineKeyboardButton cancel = new InlineKeyboardButton();
        cancel.setText("‚Ü©Ô∏è");
        cancel.setCallbackData("CANCEL");
        singleRow.add(cancel);

        rows.add(singleRow);

        InlineKeyboardMarkup markup = new InlineKeyboardMarkup(rows);

        SendMessage msg = new SendMessage();
        msg.setChatId(String.valueOf(chatId));
        msg.setText("–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∫–ª–µ—Ç–∫–∏ [" + (row + 1) + "," + (col + 1) + "]");
        msg.setReplyMarkup(markup);
        return msg;
    }
    /**
     * –°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã –≤ Sudoku
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @return –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ SendMessage —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
     *
     * @apiNote –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç—Ä–∏ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
     *          -  –õ–µ–≥–∫–∏–π (DIFFICULTY_EASY)
     *          -  –°—Ä–µ–¥–Ω–∏–π (DIFFICULTY_MEDIUM)
     *          -  –°–ª–æ–∂–Ω—ã–π (DIFFICULTY_HARD)
     *          –í—Å–µ –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    public SendMessage buildDifficultySelection(long chatId) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        List<InlineKeyboardButton> line1 = new ArrayList<>();
        line1.add(button("üü¢ –õ–µ–≥–∫–∏–π", "DIFFICULTY_EASY"));
        line1.add(button("üü° –°—Ä–µ–¥–Ω–∏–π", "DIFFICULTY_MEDIUM"));
        line1.add(button("üî¥ –°–ª–æ–∂–Ω—ã–π", "DIFFICULTY_HARD"));
        rows.add(line1);

        InlineKeyboardMarkup markup = new InlineKeyboardMarkup(rows);

        SendMessage msg = new SendMessage();
        msg.setChatId(String.valueOf(chatId));
        msg.setText("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ Sudoku:");
        msg.setReplyMarkup(markup);
        return msg;
    }
    /**
     * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline-–∫–Ω–æ–ø–∫–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ callback –¥–∞–Ω–Ω—ã–º–∏
     *
     * @param text –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
     * @param callback –¥–∞–Ω–Ω—ã–µ –¥–ª—è callback –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
     * @return –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç InlineKeyboardButton
     *
     * @apiNote –£–ø—Ä–æ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫, —Å–æ–∫—Ä–∞—â–∞—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –≤ –º–µ—Ç–æ–¥–∞—Ö –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
     */
    private InlineKeyboardButton button(String text, String callback) {
        InlineKeyboardButton btn = new InlineKeyboardButton();
        btn.setText(text);
        btn.setCallbackData(callback);
        return btn;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–°—Ç–∞—Ä—Ç" –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
     */
    public SendMessage buildStartButtonMessage(long chatId) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        List<InlineKeyboardButton> startRow = new ArrayList<>();
        InlineKeyboardButton startButton = new InlineKeyboardButton();
        startButton.setText("üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É");
        startButton.setSwitchInlineQueryCurrentChat("/start");
        startRow.add(startButton);
        rows.add(startRow);

        InlineKeyboardMarkup markup = new InlineKeyboardMarkup(rows);

        SendMessage msg = new SendMessage();
        msg.setChatId(String.valueOf(chatId));
               msg.setReplyMarkup(markup);
        return msg;
    }
}
